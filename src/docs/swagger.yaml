openapi: 3.0.3
info:
  title: Company
  version: 1.0.11
servers:
  - url: http://localhost:3000
paths:
  /api/users/register:
    post:
      tags:
        - User
      summary: Registration
      description: Create a new user
      operationId: register
      requestBody:
        description: Create a new user account in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: nghito
                password:
                  type: string
                  example: 123456@
                employeeNumber:
                  type: number
                  example: 1
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User is created successfully
        "400":
          description: Validation failed
        "404":
          description: Employee is not found
  /api/users/login:
    post:
      tags:
        - User
      summary: Login
      description: login
      operationId: login
      requestBody:
        description: Create a new user account in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: nghito
                password:
                  type: string
                  example: 123456@
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login successfully
        "400":
          description: Wrong username or password
  /api/employees:
    post:
      tags:
        - Employee
      summary: Create a new employee
      description: Create a new employee
      operationId: Create a new employee
      requestBody:
        description: Create a new employee in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                lastName:
                  type: string
                  example: Jones
                firstName:
                  type: string
                  example: Emily
                extension:
                  type: string
                  example: x1238
                email:
                  type: string
                  example: emily.jones@example.com
                officeCode:
                  type: string
                  example: 2
                reportsTo:
                  type: number
                  example: 1
                jobTitle:
                  type: string
                  example: Leader
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Employee is created successfully
        "400":
          description: Validation failed
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/:
    get:
      tags:
        - Employee
      summary: Get all employees
      description: Get all employees
      operationId: Get all employees
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastName:
                    type: string
                    example: Jones
                  firstName:
                    type: string
                    example: Emily
                  extension:
                    type: string
                    example: x1238
                  email:
                    type: string
                    example: emily.jones@example.com
                  officeCode:
                    type: string
                    example: 2
                  reportsTo:
                    type: number
                    example: 1
                  jobTitle:
                    type: string
                    example: Leader
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}:
    get:
      tags:
        - Employee
      summary: Get employee by employee number
      description: ""
      operationId: Get employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  lastName:
                    type: string
                    example: Jones
                  firstName:
                    type: string
                    example: Emily
                  extension:
                    type: string
                    example: x1238
                  email:
                    type: string
                    example: emily.jones@example.com
                  officeCode:
                    type: string
                    example: 2
                  reportsTo:
                    type: number
                    example: 1
                  jobTitle:
                    type: string
                    example: Leader
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}/:
    put:
      tags:
        - Employee
      summary: Update employee by employee number
      description: ""
      operationId: Update employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      requestBody:
        description: Create a new employee in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                lastName:
                  type: string
                  example: Slick
                firstName:
                  type: string
                  example: Back
                extension:
                  type: string
                  example: p2465
                email:
                  type: string
                  example: handsome@example.com
                officeCode:
                  type: string
                  example: 2
                reportsTo:
                  type: number
                  example: 1
                jobTitle:
                  type: string
                  example: Leader
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Employee is updated  successfully
        "400":
          description: Validation failed
        "404":
          description: Employee not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/employees/{id}?:
    delete:
      tags:
        - Employee
      summary: Delete employee by employee number
      description: ""
      operationId: Delete employee info by employee number in the company
      parameters:
        - name: id
          in: path
          description: Enter employee number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Employee is deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Employee is not found
      security:
        - bearerAuth: []
  /api/customers:
    post:
      tags:
        - Customer
      summary: Create a new Customer
      description: Create a new customer
      operationId: Create a new customer
      requestBody:
        description: Create a new customer in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Globex Corporation
                contactLastName:
                  type: string
                  example: Shift
                contactFirstName:
                  type: string
                  example: Jane
                phone:
                  type: string
                  example: 234-567-8901
                addressLine1:
                  type: string
                  example: 456 Elm St
                addressLine2:
                  type: string
                  example: Apt 1A Aiu St
                city:
                  type: string
                  example: Othertown
                state:
                  type: string
                  example: TX
                postalCode:
                  type: string
                  example: 67890
                country:
                  type: string
                  example: USA
                salesRepEmployeeNumber:
                  type: number
                  example: 4
                creditLimit:
                  type: number
                  example: 75000
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer is created successfully
        "400":
          description: Validation failed
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/:
    get:
      tags:
        - Customer
      summary: Get all customers
      description: Get all customers
      operationId: Get all customers
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerName:
                    type: string
                    example: Globex Corporation
                  contactLastName:
                    type: string
                    example: Shift
                  contactFirstName:
                    type: string
                    example: Jane
                  phone:
                    type: string
                    example: 234-567-8901
                  addressLine1:
                    type: string
                    example: 456 Elm St
                  addressLine2:
                    type: string
                    example: Apt 1A Aiu St
                  city:
                    type: string
                    example: Othertown
                  state:
                    type: string
                    example: TX
                  postalCode:
                    type: string
                    example: 67890
                  country:
                    type: string
                    example: USA
                  salesRepEmployeeNumber:
                    type: number
                    example: 4
                  creditLimit:
                    type: number
                    example: 75000
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}:
    get:
      tags:
        - Customer
      summary: Get customer by employee number
      description: ""
      operationId: Get customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  customerName:
                    type: string
                    example: Globex Corporation
                  contactLastName:
                    type: string
                    example: Shift
                  contactFirstName:
                    type: string
                    example: Jane
                  phone:
                    type: string
                    example: 234-567-8901
                  addressLine1:
                    type: string
                    example: 456 Elm St
                  addressLine2:
                    type: string
                    example: Apt 1A Aiu St
                  city:
                    type: string
                    example: Othertown
                  state:
                    type: string
                    example: TX
                  postalCode:
                    type: string
                    example: 67890
                  country:
                    type: string
                    example: USA
                  salesRepEmployeeNumber:
                    type: number
                    example: 4
                  creditLimit:
                    type: number
                    example: 75000
        "404":
          description: Customer is not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}/:
    put:
      tags:
        - Customer
      summary: Update customer by customer number
      description: ""
      operationId: Update customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      requestBody:
        description: Update a customer in the company
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Globex Corporation
                contactLastName:
                  type: string
                  example: Shift
                contactFirstName:
                  type: string
                  example: Jane
                phone:
                  type: string
                  example: 234-567-8901
                addressLine1:
                  type: string
                  example: 456 Elm St
                addressLine2:
                  type: string
                  example: Apt 1A Aiu St
                city:
                  type: string
                  example: Othertown
                state:
                  type: string
                  example: TX
                postalCode:
                  type: string
                  example: 67890
                country:
                  type: string
                  example: USA
                salesRepEmployeeNumber:
                  type: number
                  example: 4
                creditLimit:
                  type: number
                  example: 75000
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Customer is updated successfully
        "400":
          description: Validation failed
        "404":
          description: Customer is not found
        "401":
          description: Unauthorized
      security:
        - bearerAuth: []
  /api/customers/{id}?:
    delete:
      tags:
        - Customer
      summary: Delete customer by customer number
      description: ""
      operationId: Delete customer info by customer number in the company
      parameters:
        - name: id
          in: path
          description: Enter customer number
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  Message:
                    type: string
                    example: Customer is deleted successfully
        "401":
          description: Unauthorized
        "404":
          description: Customer is not found
      security:
        - bearerAuth: []
  /api/logs/{id}:
    put:
      summary: Update the log level
      description: Update the level of an existing log entry by its ID.
      tags:
        - Logs
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the log entry to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                level:
                  type: string
                  enum: ["Info", "Warning", "Error"]
                  example: "Warning"
              required:
                - level
      responses:
        200:
          description: Log is updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Log is updated successfully"
        404:
          description: Log not found
        400:
          description: Invalid request data

  /api/logs:
    get:
      summary: Retrieve logs based on filters
      description: Retrieve log entries based on filters like level, user, time range, and content.
      tags:
        - Logs
      parameters:
        - in: query
          name: level
          schema:
            type: string
            enum: ["Info", "Warning", "Error"]
          description: The level of the logs to retrieve.
        - in: query
          name: user
          schema:
            type: string
          description: The user associated with the logs.
        - in: query
          name: startTime
          schema:
            type: string
            format: date-time
          description: Start time for filtering logs (ISO 8601 format).
        - in: query
          name: endTime
          schema:
            type: string
            format: date-time
          description: End time for filtering logs (ISO 8601 format).
        - in: query
          name: content
          schema:
            type: string
          description: Filter logs containing this text in their message.
      responses:
        200:
          description: A list of logs that match the filter criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60c72b2f9b1d4f22c8e1c0e5"
                    level:
                      type: string
                      example: "Info"
                    user:
                      type: string
                      example: "JohnDoe"
                    message:
                      type: string
                      example: "Request made to /api/logs with method GET"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2024-08-16T09:24:00Z"
        400:
          description: Invalid query parameters
  /api/offices:
    post:
      summary: Create a new office with a default employee
      description: Create a new office and automatically add a default employee with the last name "9999".
      tags:
        - Offices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                officeCode:
                  type: string
                  example: "1"
                city:
                  type: string
                  example: "San Francisco"
                phone:
                  type: string
                  example: "+1 123-456-7890"
                addressLine1:
                  type: string
                  example: "123 Market St"
                addressLine2:
                  type: string
                  example: "Suite 100"
                state:
                  type: string
                  example: "CA"
                country:
                  type: string
                  example: "USA"
                postalCode:
                  type: string
                  example: "94103"
                territory:
                  type: string
                  example: "NA"
              required:
                - officeCode
                - city
                - phone
                - addressLine1
                - country
                - postalCode
                - territory
      responses:
        200:
          description: Office is created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Office is created successfully"
        400:
          description: Office code is invalid
  /api/reports:
    get:
      summary: Generate financial reports
      description: Generate financial reports for a specific office, employee, or all offices within a date range.
      tags:
        - Reports
      parameters:
        - in: query
          name: start_date
          required: true
          schema:
            type: string
            format: date
            example: "2024-01-01"
          description: Start date for the report (inclusive).
        - in: query
          name: end_date
          required: true
          schema:
            type: string
            format: date
            example: "2024-01-31"
          description: End date for the report (inclusive).
        - in: query
          name: employeeNumber
          required: false
          schema:
            type: string
            example: "1002"
          description: Optional employee number to filter reports by a specific employee.
        - in: query
          name: officeCode
          required: false
          schema:
            type: string
            example: "1"
          description: Optional office code to filter reports by a specific office. If not provided, reports for all offices will be generated.
      responses:
        200:
          description: Report generated successfully
        404:
          description: Office or Employee not found
        400:
          description: Invalid request parameters

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
